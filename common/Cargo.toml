[package]
name = "rust_ddd_example_common"
version = "0.1.0"
edition = "2021"

[workspace]
members = ["events", "common_rest", "common_telnet", "types"]
default-members = [".", "events", "common_rest", "common_telnet", "types"]

[workspace.package]
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
derive-new = "0"
time = { version = "0", features = ["default", "serde-well-known"] }
serde = { version = "1", features = ["derive", "rc", "alloc"] }
serde_derive = "1"
derivative = "2"
enum_delegate = "0"
actix-web = "4.9.0"
smart-default = "0"
utoipa = "5"
uuid = { version = "1", features = ["v4", "fast-rng", "macro-diagnostics", "serde"] }
derive-getters = "0"

rstest = "0"
fake = "3"
rand = "0"

types = { path = "types" }

[dependencies]
rand = { workspace = true, optional = true }

events = { path = "events" }
common_rest = { path = "common_rest" }
types = { path = "types" }
common_telnet = { path = "common_telnet" }



[features]
testing = ["rand"]

[dev-dependencies]
rust_ddd_example_common = { path = ".", features = ["testing"] }


