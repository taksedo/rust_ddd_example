["workspace"]
members = ["domain", "usecase", "application", "common/*", "in_memory_persistence", "rest", "telnet"]

[workspace.package]
version = "0.1.0"
edition = "2021"

[package]
name = "rust_hex_sandbox"
version.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
derive-new = "0.5.9"
actix-web = "4.3.1"
actix-cors = "0.6.4"
actix-service = "2.0.2"
structmap = "0.1.6"
structmap-derive = "0.1.6"
dotenv = "0.15.0"
log = "0.4.17"
fern = "0.6.2"
chrono = "0.4.24"
derivative = "2.2.0"
erased-serde = "0.3.25"
serde_derive = "1.0.163"
serde = { version = "1.0.162", features = ["derive","rc","alloc"] }
serde_json = "1.0.96"
thiserror = "1.0.40"
bigdecimal = { version = "0.3.0", features = ["serde"] }
mockall = "0.11.3"
fake = { version="2.5.0", features=["derive", "bigdecimal"] }
rand = "0.8.5"
rstest = "0.17.0"
time = "0.3.21"
enum_access = "0.4.0"
enum_dispatch = "0.3.11"
smart-default = "0.7.1"


domain = { path = "./domain" }
usecase = { path = "./usecase" }
#in_memory_persistence = { path = "./in_memory_persistence" }
#rest = { path = "rest" }
common_types = { path = "./common/types" }
common_events = { path = "./common/events" }
common_telnet = { path = "./common/telnet" }
common_rest = { path = "./common/rest" }

[dependencies]
actix-web = { workspace = true }
dotenv = { workspace = true }
log = { workspace = true }
fern = { workspace = true }
chrono = { workspace = true }

domain = { path = "./domain" }
usecase = { path = "./usecase" }
#in_memory_persistence = { path = "./in_memory_persistence" }
#rest = { path = "rest" }
common_types = { path = "./common/types" }
common_events = { path = "./common/events" }
common_telnet = { path = "./common/telnet" }
common_rest = { path = "./common/rest" }

[build-dependencies]
gcc = "0.3"